akka {
  loglevel = DEBUG

  extensions = [akka.persistence.Persistence, akka.cluster.sharding]

  actor {
    provider = cluster

    serializers {
      jackson-cbor = "akka.serialization.jackson.JacksonCborSerializer"
    }

    serialization-bindings {
        "dev.nateschieber.aboutactors.CborSerializable" = jackson-cbor
    }
  }

  cluster {
    seed-nodes = [
      "akka://ClusterSystem@127.0.0.1:2551",
      "akka://ClusterSystem@127.0.0.1:2552"]

    sharding {
        number-of-shards = 2
    }
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  persistence {
      snapshot-store.plugin = "akka.persistence.r2dbc.snapshot"
      state.plugin = "akka.persistence.r2dbc.state"
      max-concurrent-recoveries = 50

      journal {
        plugin = "akka.persistence.r2dbc.journal"
        recovery-event-timeout = 30s
      }

      r2dbc {
        journal {
            class = "akka.persistence.r2dbc.journal.R2dbcJournal"
            auto-start-journals = ["akka.persistence.r2dbc.journal"]
            auto-start-snapshot-stores = ["akka.persistence.r2dbc.snapshot"]
        }
        validation-query = "SELECT 1"
        connect-timeout = 3 seconds
        acquire-timeout = 5 seconds

        connection-factory = ${akka.persistence.r2dbc.postgres}
        connection-factory = {
            driver = "postgres"
            host = "localhost"
            port = 5434
            database = "postgres"
            username = "postgres"
            password = "postgres"
        }
      }
  }

}